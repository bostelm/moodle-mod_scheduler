/**
 * Revoke an appointment.
 *
 * This module allows for revoking an appointment from a student list.
 *
 * @module     mod_scheduler/revoke
 * @copyright  2019 Royal College of Art
 * @author     Frédéric Massart <fred@branchup.tech>
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("mod_scheduler/revoke",["jquery","core/ajax","core/notification","core/str"],(function($,Ajax,Notification,Str){function Revoker(root,cmid){this.cmid=cmid,root.on("click",".otherstudent a.revoke-student",function(e){e.preventDefault();var wrapper=$(e.target).closest(".otherstudent");this.triggerRevoke(wrapper)}.bind(this))}return Revoker.prototype.triggerRevoke=function(studentWrapper){var appId=parseInt(studentWrapper.data("appointmentid"),10);appId&&Str.get_strings([{key:"confirmation",component:"core_admin"},{key:"confirmsinglerevoke",component:"mod_scheduler"},{key:"yes",component:"core"},{key:"no",component:"core"}]).then(function(str){Notification.confirm(str[0],str[1],str[2],str[3],function(){studentWrapper.hide(),this.revokeAppointment(appId).then((function(){studentWrapper.remove()})).fail((function(e){studentWrapper.show(),Notification.exception(e)}))}.bind(this),(function(){}))}.bind(this)).fail(Notification.exception)},Revoker.prototype.revokeAppointment=function(appId){return Ajax.call([{methodname:"mod_scheduler_revoke_appointment",args:{cmid:this.cmid,appointmentid:appId}}])[0]},{init:function(wrapperSelector,cmid){new Revoker($(wrapperSelector),cmid)}}}));

//# sourceMappingURL=revoke.min.js.map